version: "3"

services:
  db:
    build:
      context: docker/postgres_db/.docker-containers/postgres
    restart: "on-failure"
#    expose:
#      - 5432
    env_file:
      - docker/postgres_db/.docker-env/dev/postgres.env
    environment:
      - POSTGRES_DB_USER=docker
    ports:
      - "5432:5432"
    ulimits:
      nproc: 128000
      nofile:
        soft: 50000
        hard: 120000
    networks:
      - python-preparation
  
  mongodb:
    image: mongo:latest
    container_name: my-mongodb
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: admin
    volumes:
      - ./data:/data/db


#   parser-backend:
#     build:
#       context: .
#     container_name: parser-backend
# #    image: 130962004394.dkr.ecr.us-east-1.amazonaws.com/fastapi:backend
#     env_file:
#       - .env
# #    environment:
# #      PORT: 8000
# #      DB_ENDPOINT: db
#     ports:
#       - '8040:8000'
#     volumes:
#       - /var/run/docker.sock:/var/run/docker.sock
#       - .:/code
#     restart: "on-failure"
#     command: uvicorn app.main:app --reload --host 0.0.0.0 --port 8000
#     networks:
#       - solid-scraper
#     depends_on:
#       - postgres


volumes:
  db:
  # parser-backend:


networks:
  python-preparation:
